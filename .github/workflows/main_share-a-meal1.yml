name: CI/CD Pipeline for Share-a-Meal

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    integrationtests:
        runs-on: ubuntu-latest
        env:
            MYSQL_ROOT_PASSWORD: root
            DB_HOST: localhost
            DB_PORT: 3306
            DB_DATABASE: share_a_meal
            DB_USER: root
            DB_PASSWORD: root
        services:
            mysql:
                image: mysql:5.7
                ports:
                    - 3306
                options: >-
                    --health-cmd="mysqladmin ping"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=3

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Install MySQL client
              run: sudo apt-get update && sudo apt-get install -y mysql-client

            - name: Wait for MySQL and Create DB
              run: |
                  echo "Waiting for MySQL to be ready..."
                  sleep 20
                  mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE IF NOT EXISTS ${{ env.DB_DATABASE }};"

            - name: Import initial database
              run: |
                  mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} ${{ env.DB_DATABASE }} < meal-database-script.sql
                  mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} ${{ env.DB_DATABASE }} -e "SHOW TABLES;"

            - name: Install dependencies
              run: npm install

            - name: Run integration tests
              run: |
                  npm test -- --DB_PASSWORD $MYSQL_ROOT_PASSWORD --DB_USER root --DB_NAME $DB_DATABASE

    build:
        runs-on: ubuntu-latest
        needs: integrationtests

        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'

            - name: Install, build, and test
              run: |
                  npm install
                  npm run build --if-present
                  npm run test --if-present

            - name: Zip artifact for deployment
              run: zip release.zip ./* -r

            - name: Upload artifact for deployment job
              uses: actions/upload-artifact@v4
              with:
                  name: node-app
                  path: release.zip

    deploy:
        runs-on: ubuntu-latest
        needs: build
        environment:
            name: 'Production'
            url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
        permissions:
            id-token: write

        steps:
            - name: Download artifact from build job
              uses: actions/download-artifact@v4
              with:
                  name: node-app

            - name: Unzip artifact
              run: unzip release.zip

            - name: Login to Azure
              uses: azure/login@v1
              with:
                  client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4F2FC538919C45C285185C59ADD29A53 }}
                  tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B6105D65F7EC4EB693FC56E7700DCCB2 }}
                  subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1FAE4374F2A543B8A8BBE49EF751A139 }}

            - name: Deploy to Azure Web App
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v2
              with:
                  app-name: 'share-a-meal1'
                  slot-name: 'Production'
                  package: .
