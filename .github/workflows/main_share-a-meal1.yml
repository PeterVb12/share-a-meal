name: CI/CD Pipeline for Share-a-Meal

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    integrationtests:
        runs-on: ubuntu-latest
        env:
            MYSQL_ROOT_PASSWORD: root
            DB_HOST: localhost
            DB_PORT: 3306
            DB_DATABASE: share_a_meal
            DB_USER: root
            DB_PASSWORD: root
        services:
            mysql:
                image: mysql:5.7
                ports:
                    - 3306

        steps:
            - uses: actions/checkout@v4

            - name: Start MySQL connection from host
              run: |
                  sudo /etc/init.d/mysql start
                  sudo apt-get install -y mysql-client
                  mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} -e "SHOW DATABASES;"
                  mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} -e "CREATE DATABASE ${{ env.DB_DATABASE }};"

            - name: Import the database
              run: |
                  mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} ${{ env.DB_DATABASE }} < meal-database-script.sql
                  mysql -uroot -p${{ env.MYSQL_ROOT_PASSWORD }} ${{ env.DB_DATABASE }} -e "SHOW TABLES;"

            - name: npm install
              run: |
                  npm install

            - name: npm test
              run: |
                  npm test -- --DB_PASSWORD $MYSQL_ROOT_PASSWORD --DB_USER root --DB_NAME $DB_DATABASE

    build:
        runs-on: ubuntu-latest
        needs: integrationtests

        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20.x'

            - name: Install, build
              run: |
                  npm install
                  npm run build --if-present

            - name: Zip artifact for deployment
              run: zip release.zip ./* -r

            - name: Upload artifact for deployment job
              uses: actions/upload-artifact@v4
              with:
                  name: node-app
                  path: release.zip

    deploy:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repo
              uses: actions/checkout@v4

            - name: Install Render CLI (correcte versie)
              run: curl -fsSL https://cdn.render.com/cli/install.sh | sh

            - name: Add Render CLI to PATH
              run: echo "$HOME/.render" >> $GITHUB_PATH

            - name: Deploy to Render
              env:
                  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
              run: |
                  $HOME/.render/render deployments create \
                    --service-id ${{ secrets.RENDER_SERVICE_ID }} \
                    --branch main \
                    --wait
